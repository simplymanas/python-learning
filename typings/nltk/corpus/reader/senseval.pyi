"""
This type stub file was generated by pyright.
"""

from nltk import compat
from nltk.tokenize import *
from nltk.corpus.reader.util import *
from nltk.corpus.reader.api import *
from typing import Any, Optional

"""
Read from the Senseval 2 Corpus.

SENSEVAL [http://www.senseval.org/]
Evaluation exercises for Word Sense Disambiguation.
Organized by ACL-SIGLEX [http://www.siglex.org/]

Prepared by Ted Pedersen <tpederse@umn.edu>, University of Minnesota,
http://www.d.umn.edu/~tpederse/data.html
Distributed with permission.

The NLTK version of the Senseval 2 files uses well-formed XML.
Each instance of the ambiguous words "hard", "interest", "line", and "serve"
is tagged with a sense identifier, and supplied with context.
"""
@compat.python_2_unicode_compatible
class SensevalInstance(object):
    def __init__(self, word, position, context, senses):
        self.word = ...
        self.senses = ...
        self.position = ...
        self.context = ...
    
    def __repr__(self):
        ...
    


class SensevalCorpusReader(CorpusReader):
    def instances(self, fileids: Optional[Any] = ...):
        ...
    
    def raw(self, fileids: Optional[Any] = ...):
        """
        :return: the text contents of the given fileids, as a single string.
        """
        ...
    
    def _entry(self, tree):
        ...
    


class SensevalCorpusView(StreamBackedCorpusView):
    def __init__(self, fileid, encoding):
        ...
    
    def read_block(self, stream):
        ...
    
    def _parse_instance(self, instance, lexelt):
        ...
    


def _fixXML(text):
    """
    Fix the various issues with Senseval pseudo-XML.
    """
    ...

