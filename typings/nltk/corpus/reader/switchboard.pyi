"""
This type stub file was generated by pyright.
"""

from nltk import compat
from nltk.corpus.reader.util import *
from nltk.corpus.reader.api import *
from typing import Any, Optional

@compat.python_2_unicode_compatible
class SwitchboardTurn(list):
    """
    A specialized list object used to encode switchboard utterances.
    The elements of the list are the words in the utterance; and two
    attributes, ``speaker`` and ``id``, are provided to retrieve the
    spearker identifier and utterance id.  Note that utterance ids
    are only unique within a given discourse.
    """
    def __init__(self, words, speaker, id):
        self.speaker = ...
        self.id = ...
    
    def __repr__(self):
        ...
    


class SwitchboardCorpusReader(CorpusReader):
    _FILES = ...
    def __init__(self, root, tagset: Optional[Any] = ...):
        ...
    
    def words(self):
        ...
    
    def tagged_words(self, tagset: Optional[Any] = ...):
        ...
    
    def turns(self):
        ...
    
    def tagged_turns(self, tagset: Optional[Any] = ...):
        ...
    
    def discourses(self):
        ...
    
    def tagged_discourses(self, tagset: bool = ...):
        ...
    
    def _discourses_block_reader(self, stream):
        ...
    
    def _tagged_discourses_block_reader(self, stream, tagset: Optional[Any] = ...):
        ...
    
    def _turns_block_reader(self, stream):
        ...
    
    def _tagged_turns_block_reader(self, stream, tagset: Optional[Any] = ...):
        ...
    
    def _words_block_reader(self, stream):
        ...
    
    def _tagged_words_block_reader(self, stream, tagset: Optional[Any] = ...):
        ...
    
    _UTTERANCE_RE = ...
    _SEP = ...
    def _parse_utterance(self, utterance, include_tag, tagset: Optional[Any] = ...):
        ...
    


