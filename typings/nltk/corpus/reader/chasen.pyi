"""
This type stub file was generated by pyright.
"""

from nltk.corpus.reader.util import *
from nltk.corpus.reader.api import *
from typing import Any, Optional

class ChasenCorpusReader(CorpusReader):
    def __init__(self, root, fileids, encoding=..., sent_splitter: Optional[Any] = ...):
        ...
    
    def raw(self, fileids: Optional[Any] = ...):
        ...
    
    def words(self, fileids: Optional[Any] = ...):
        ...
    
    def tagged_words(self, fileids: Optional[Any] = ...):
        ...
    
    def sents(self, fileids: Optional[Any] = ...):
        ...
    
    def tagged_sents(self, fileids: Optional[Any] = ...):
        ...
    
    def paras(self, fileids: Optional[Any] = ...):
        ...
    
    def tagged_paras(self, fileids: Optional[Any] = ...):
        ...
    


class ChasenCorpusView(StreamBackedCorpusView):
    """
    A specialized corpus view for ChasenReader. Similar to ``TaggedCorpusView``,
    but this'll use fixed sets of word and sentence tokenizer.
    """
    def __init__(self, corpus_file, encoding, tagged, group_by_sent, group_by_para, sent_splitter: Optional[Any] = ...):
        ...
    
    def read_block(self, stream):
        """Reads one paragraph at a time."""
        ...
    


def demo():
    ...

def test():
    ...

if __name__ == '__main__':
    ...
