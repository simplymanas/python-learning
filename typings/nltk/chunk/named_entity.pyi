"""
This type stub file was generated by pyright.
"""

from nltk.tag import ClassifierBasedTagger
from nltk.chunk.api import ChunkParserI

"""
Named entity chunker
"""
class NEChunkParserTagger(ClassifierBasedTagger):
    """
    The IOB tagger used by the chunk parser.
    """
    def __init__(self, train):
        ...
    
    def _classifier_builder(self, train):
        ...
    
    def _english_wordlist(self):
        ...
    
    def _feature_detector(self, tokens, index, history):
        ...
    


class NEChunkParser(ChunkParserI):
    """
    Expected input: list of pos-tagged words
    """
    def __init__(self, train):
        ...
    
    def parse(self, tokens):
        """
        Each token should be a pos-tagged word
        """
        ...
    
    def _train(self, corpus):
        ...
    
    def _tagged_to_parse(self, tagged_tokens):
        """
        Convert a list of tagged tokens to a chunk-parse tree.
        """
        ...
    
    @staticmethod
    def _parse_to_tagged(sent):
        """
        Convert a chunk-parse tree to a list of tagged tokens.
        """
        ...
    


def shape(word):
    ...

def simplify_pos(s):
    ...

def postag_tree(tree):
    ...

def load_ace_data(roots, fmt=..., skip_bnews: bool = ...):
    ...

def load_ace_file(textfile, fmt):
    ...

def cmp_chunks(correct, guessed):
    ...

def build_model(fmt=...):
    ...

if __name__ == '__main__':
    ...
