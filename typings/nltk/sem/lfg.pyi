"""
This type stub file was generated by pyright.
"""

from nltk.compat import python_2_unicode_compatible
from typing import Any, Optional

@python_2_unicode_compatible
class FStructure(dict):
    def safeappend(self, key, item):
        """
        Append 'item' to the list at 'key'.  If no list exists for 'key', then
        construct one.
        """
        ...
    
    def __setitem__(self, key, value):
        ...
    
    def __getitem__(self, key):
        ...
    
    def __contains__(self, key):
        ...
    
    def to_glueformula_list(self, glue_dict):
        ...
    
    def to_depgraph(self, rel: Optional[Any] = ...):
        ...
    
    def _to_depgraph(self, nodes, head, rel):
        ...
    
    @staticmethod
    def read_depgraph(depgraph):
        ...
    
    @staticmethod
    def _read_depgraph(node, depgraph, label_counter: Optional[Any] = ..., parent: Optional[Any] = ...):
        ...
    
    @staticmethod
    def _make_label(value):
        """
        Pick an alphabetic character as identifier for an entity in the model.

        :param value: where to index into the list of characters
        :type value: int
        """
        ...
    
    def __repr__(self):
        ...
    
    def __str__(self):
        ...
    
    def pretty_format(self, indent=...):
        ...
    


def demo_read_depgraph():
    ...

if __name__ == '__main__':
    ...
