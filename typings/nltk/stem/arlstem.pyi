"""
This type stub file was generated by pyright.
"""

from nltk.stem.api import StemmerI

"""
ARLSTem Arabic Stemmer
The details about the implementation of this algorithm are described in:
K. Abainia, S. Ouamour and H. Sayoud, A Novel Robust Arabic Light Stemmer ,
Journal of Experimental & Theoretical Artificial Intelligence (JETAI'17),
Vol. 29, No. 3, 2017, pp. 557-573.
The ARLSTem is a light Arabic stemmer that is based on removing the affixes
from the word (i.e. prefixes, suffixes and infixes). It was evaluated and
compared to several other stemmers using Paice's parameters (under-stemming
index, over-stemming index and stemming weight), and the results showed that
ARLSTem is promising and producing high performances. This stemmer is not
based on any dictionary and can be used on-line effectively.
"""
class ARLSTem(StemmerI):
    '''
    ARLSTem stemmer : a light Arabic Stemming algorithm without any dictionary.
    Department of Telecommunication & Information Processing. USTHB University,
    Algiers, Algeria.
    ARLSTem.stem(token) returns the Arabic stem for the input token.
    The ARLSTem Stemmer requires that all tokens are encoded using Unicode
    encoding.
    '''
    def __init__(self):
        self.re_hamzated_alif = ...
        self.re_alifMaqsura = ...
        self.re_diacritics = ...
        self.pr2 = ...
        self.pr3 = ...
        self.pr32 = ...
        self.pr4 = ...
        self.su2 = ...
        self.su22 = ...
        self.su3 = ...
        self.su32 = ...
        self.pl_si2 = ...
        self.pl_si3 = ...
        self.verb_su2 = ...
        self.verb_pr2 = ...
        self.verb_pr22 = ...
        self.verb_pr33 = ...
        self.verb_suf3 = ...
        self.verb_suf2 = ...
        self.verb_suf1 = ...
    
    def stem(self, token):
        """
            call this function to get the word's stem based on ARLSTem .
        """
        ...
    
    def norm(self, token):
        """
            normalize the word by removing diacritics, replacing hamzated Alif
            with Alif replacing AlifMaqsura with Yaa and removing Waaw at the
            beginning.
        """
        ...
    
    def pref(self, token):
        """
            remove prefixes from the words' beginning.
        """
        ...
    
    def suff(self, token):
        """
            remove suffixes from the word's end.
        """
        ...
    
    def fem2masc(self, token):
        """
            transform the word from the feminine form to the masculine form.
        """
        ...
    
    def plur2sing(self, token):
        """
            transform the word from the plural form to the singular form.
        """
        ...
    
    def verb(self, token):
        """
            stem the verb prefixes and suffixes or both
        """
        ...
    
    def verb_t1(self, token):
        """
            stem the present prefixes and suffixes
        """
        ...
    
    def verb_t2(self, token):
        """
            stem the future prefixes and suffixes
        """
        ...
    
    def verb_t3(self, token):
        """
            stem the present suffixes
        """
        ...
    
    def verb_t4(self, token):
        """
            stem the present prefixes
        """
        ...
    
    def verb_t5(self, token):
        """
            stem the future prefixes
        """
        ...
    
    def verb_t6(self, token):
        """
            stem the order prefixes
        """
        ...
    


